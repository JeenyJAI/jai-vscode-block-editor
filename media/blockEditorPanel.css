body {
    padding: 20px;
    font-family: var(--vscode-font-family);
    background-color: var(--vscode-panel-background);
    color: var(--vscode-foreground);
    height: 100vh;
    display: flex;
    flex-direction: column;
}

.container {
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
    padding: 0 10px;
}

.header {
    margin-bottom: 20px;
}

.header h2 {
    margin: 0 0 10px 0;
    color: var(--vscode-foreground);
}

textarea {
    flex: 1;
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    border: 1px solid var(--vscode-input-border);
    padding: 12px;
    font-family: var(--vscode-editor-font-family);
    font-size: var(--vscode-editor-font-size);
    resize: none;
    outline: none;
    line-height: 1.5;
    transition: opacity 0.2s ease;
}

textarea:focus {
    border-color: var(--vscode-focusBorder);
}

/* Processing state styles for textarea */
textarea.is-processing {
    opacity: 0.7;
    background-color: var(--vscode-input-background);
    cursor: wait;
}

textarea:read-only {
    opacity: 0.8;
    cursor: not-allowed;
}

.button-container {
    display: flex;
    gap: 12px;
    margin-top: 16px;
}

button {
    padding: 10px 20px;
    background-color: var(--vscode-button-background);
    color: var(--vscode-button-foreground);
    border: none;
    cursor: pointer;
    font-size: 14px;
    flex: 1;
    position: relative;
    transition: opacity 0.2s ease, background-color 0.1s ease;
}

button:hover:not(:disabled):not(.is-processing) {
    background-color: var(--vscode-button-hoverBackground);
}

button.secondary {
    background-color: var(--vscode-button-secondaryBackground);
    color: var(--vscode-button-secondaryForeground);
}

button.secondary:hover:not(:disabled) {
    background-color: var(--vscode-button-secondaryHoverBackground);
}

button:disabled,
button.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--vscode-button-background);
}

button:disabled:hover,
button.disabled:hover {
    background-color: var(--vscode-button-background);
}

/* Processing state styles for buttons */
button.is-processing {
    opacity: 0.8;
    cursor: wait;
    position: relative;
    padding-right: 40px; /* Space for spinner */
}

button.is-processing::after {
    content: '';
    position: absolute;
    width: 14px;
    height: 14px;
    right: 12px;
    top: 50%;
    margin-top: -7px;
    border: 2px solid transparent;
    border-top-color: currentColor;
    border-right-color: currentColor;
    border-radius: 50%;
    animation: button-spinner 0.6s linear infinite;
}

@keyframes button-spinner {
    to {
        transform: rotate(360deg);
    }
}

button:focus-visible {
    outline: 1px solid var(--vscode-focusBorder);
    outline-offset: 2px;
}

.hint-toggle:focus-visible {
    outline: 1px solid var(--vscode-focusBorder);
    outline-offset: -1px;
}

.hint-container {
    margin-bottom: 15px;
    background-color: var(--vscode-editor-background);
    border: 1px solid var(--vscode-panel-border);
    border-radius: 4px;
    padding: 0;
}

.hint-toggle {
    cursor: pointer;
    padding: 10px;
    font-size: 14px;
    font-weight: 500;
    color: var(--vscode-foreground);
    list-style: none;
    outline: none;
    user-select: none;
}

.hint-toggle:hover {
    background-color: var(--vscode-list-hoverBackground);
}

.hint-toggle::before {
    content: 'â–¶';
    display: inline-block;
    margin-right: 5px;
    transition: transform 0.2s;
}

details[open] .hint-toggle::before {
    transform: rotate(90deg);
}

.hint {
    font-size: 13px;
    opacity: 0.9;
    padding: 15px;
    color: var(--vscode-descriptionForeground);
    line-height: 1.6;
    border-top: 1px solid var(--vscode-panel-border);
    max-height: 70vh;
    overflow-y: auto;
}

.hint h3 {
    margin: 15px 0 10px 0;
    font-size: 14px;
    font-weight: 600;
    color: var(--vscode-foreground);
}

.hint h3:first-child {
    margin-top: 0;
}

.hint h4 {
    margin: 12px 0 8px 0;
    font-size: 13px;
    font-weight: 500;
    color: var(--vscode-foreground);
    opacity: 0.9;
}

.hint p {
    margin: 8px 0;
}

.hint code {
    background-color: var(--vscode-textCodeBlock-background);
    padding: 2px 4px;
    border-radius: 3px;
    font-family: var(--vscode-editor-font-family);
    font-size: 12px;
}

.hint kbd {
    background-color: var(--vscode-keybindingLabel-background);
    color: var(--vscode-keybindingLabel-foreground);
    border: 1px solid var(--vscode-keybindingLabel-border);
    border-radius: 3px;
    padding: 2px 4px;
    font-size: 11px;
    font-family: var(--vscode-font-family);
}

.hint-list {
    margin: 10px 0;
    padding-left: 20px;
}

.example {
    font-family: var(--vscode-editor-font-family);
    font-size: 12px;
    margin-top: 10px;
    background-color: var(--vscode-textCodeBlock-background);
    padding: 10px;
    border-radius: 3px;
    white-space: pre-wrap;
    border: 1px solid var(--vscode-panel-border);
}

.shortcuts {
    font-size: 12px;
    opacity: 0.6;
    margin-top: 8px;
}

/* Enhanced status styles */
.status {
    font-size: 12px;
    margin-top: 8px;
    padding: 6px 10px;
    background-color: var(--vscode-editorInfo-background);
    border-radius: 3px;
    display: none;
    opacity: 0;
    transition: opacity 0.2s ease;
}

.status.show {
    display: block;
    opacity: 1;
}

.status.info {
    background-color: var(--vscode-editorInfo-background);
    color: var(--vscode-editorInfo-foreground);
    border-left: 3px solid var(--vscode-editorInfo-foreground);
}

.status.success {
    background-color: var(--vscode-editorMarkerNavigationInfo-background);
    color: var(--vscode-editorMarkerNavigationInfo-foreground);
    border-left: 3px solid #4ec9b0;
}

.status.error {
    background-color: var(--vscode-editorError-background);
    color: var(--vscode-editorError-foreground);
    border-left: 3px solid var(--vscode-editorError-foreground);
}

.status.warning {
    background-color: var(--vscode-editorWarning-background);
    color: var(--vscode-editorWarning-foreground);
    border-left: 3px solid var(--vscode-editorWarning-foreground);
}

/* Global busy state styles */
body[aria-busy="true"] {
    cursor: wait;
}

body[aria-busy="true"] * {
    cursor: wait !important;
}

/* Semi-transparent overlay during processing */
body[aria-busy="true"]::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.05);
    pointer-events: none;
    z-index: 9999;
}

/* Progress indicator styles */
.processing-indicator {
    display: none;
    position: fixed;
    top: 10px;
    right: 10px;
    padding: 8px 12px;
    background: var(--vscode-editorWidget-background);
    color: var(--vscode-editorWidget-foreground);
    border: 1px solid var(--vscode-editorWidget-border);
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    font-size: 12px;
    z-index: 10000;
}

body[aria-busy="true"] .processing-indicator {
    display: block;
}

.processing-indicator::before {
    content: '';
    display: inline-block;
    width: 12px;
    height: 12px;
    margin-right: 6px;
    border: 2px solid transparent;
    border-top-color: currentColor;
    border-right-color: currentColor;
    border-radius: 50%;
    animation: button-spinner 0.6s linear infinite;
    vertical-align: middle;
}

/* Accessibility: respect user preferences */
@media (prefers-reduced-motion: reduce) {
    .hint-toggle::before {
        transition: none;
    }
    
    .status {
        transition: none;
    }
    
    button.is-processing::after,
    .processing-indicator::before {
        animation: none;
        border-color: currentColor;
    }
    
    textarea,
    button {
        transition: none;
    }
}

/* Dark theme adjustments */
@media (prefers-color-scheme: dark) {
    body[aria-busy="true"]::after {
        background: rgba(255, 255, 255, 0.02);
    }
}

/* Responsive design for small screens */
@media (max-width: 400px) {
    .button-container {
        flex-direction: column;
    }
    
    button {
        width: 100%;
    }
}